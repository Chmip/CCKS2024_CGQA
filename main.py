
import json
from hanlp import my_hanlp
from analysisTree import Tree
from neo4j import AnswerSearcher

length_dict = {5: ['66', '149', '336'],
                   6: ['3', '7', '22', '28', '31', '36', '42', '56', '61', '68', '70', '72', '83', '84', '87', '91',
                       '92', '95', '112', '128', '139', '143', '145', '152', '153', '156', '169', '172', '178', '189',
                       '194', '195', '200', '202', '212', '222', '231', '242', '248', '253', '265', '271', '282', '287',
                       '292', '296', '302', '303', '306', '320', '323', '324', '328', '331', '355', '361', '370', '372',
                       '373', '383', '384', '385', '391', '392', '393', '395', '419', '420', '426', '436', '444', '451',
                       '453', '456', '463', '466', '470', '473', '474', '476', '483', '485', '491', '496', '497', '498',
                       '510', '514', '518', '526', '527', '530', '551', '556', '563', '564', '565', '568', '575', '577',
                       '581', '583', '584', '586', '587', '593', '599', '605', '607', '609', '610', '621', '632', '641',
                       '643', '649', '666', '673', '675', '679', '686', '696', '698', '706', '707', '715', '725', '732',
                       '735', '741', '745', '752', '757', '761', '764', '765', '766', '768', '769', '775', '779', '783',
                       '804', '814', '821', '834', '844', '859', '864', '871', '884', '885', '887', '889', '893', '896',
                       '897', '916', '928', '937', '946', '948', '951', '954', '970', '971', '972', '976', '989', '990',
                       '998', '1002', '1005', '1014', '1027', '1032', '1042', '1053', '1057', '1073', '1079', '1086',
                       '1093', '1094', '1096', '1110', '1112', '1118', '1119', '1129', '1134', '1136', '1147', '1148',
                       '1150', '1154', '1161', '1165', '1173', '1175', '1178', '1189', '1198', '1201', '1209', '1212',
                       '1217', '1228', '1237'],
                   7: ['12', '35', '43', '54', '60', '62', '63', '73', '78', '103', '105', '113', '121', '122', '126',
                       '130', '132', '133', '137', '158', '160', '192', '204', '205', '224', '230', '241', '290', '301',
                       '318', '326', '335', '353', '369', '388', '412', '416', '434', '442', '449', '464', '467', '478',
                       '505', '529', '532', '543', '552', '553', '558', '576', '596', '603', '604', '612', '619', '623',
                       '627', '631', '637', '652', '655', '659', '660', '676', '681', '709', '717', '724', '729', '738',
                       '740', '743', '758', '763', '789', '801', '802', '822', '830', '838', '870', '890', '901', '931',
                       '933', '975', '1016', '1017', '1022', '1033', '1037', '1066', '1091', '1107', '1117', '1122',
                       '1137', '1155', '1160', '1163', '1174', '1187', '1190', '1208'],
                   8: ['10', '15', '32', '45', '46', '71', '85', '89', '97', '127', '180', '182', '183', '217', '225',
                       '256', '266', '269', '284', '310', '314', '360', '394', '396', '398', '399', '400', '413', '414',
                       '440', '475', '513', '515', '554', '555', '569', '580', '594', '616', '630', '642', '665', '670',
                       '692', '722', '730', '742', '755', '756', '770', '787', '791', '806', '807', '811', '918', '965',
                       '1008', '1010', '1031', '1048', '1084', '1103', '1106', '1109', '1113', '1114', '1128', '1133',
                       '1135', '1168', '1179', '1191', '1203', '1204', '1205', '1210', '1221', '1226', '1227'],
                   9: ['0', '5', '6', '9', '19', '33', '39', '49', '51', '76', '79', '88', '90', '96', '104', '124',
                       '147', '148', '165', '167', '186', '191', '207', '214', '218', '246', '250', '255', '268', '272',
                       '274', '285', '305', '309', '312', '341', '351', '363', '376', '387', '390', '403', '404', '406',
                       '407', '408', '409', '417', '421', '427', '429', '433', '459', '479', '492', '493', '494', '501',
                       '502', '508', '522', '531', '540', '579', '585', '591', '608', '626', '645', '668', '680', '695',
                       '697', '699', '704', '714', '726', '731', '737', '746', '748', '773', '786', '788', '820', '837',
                       '841', '843', '854', '855', '860', '861', '865', '883', '899', '909', '911', '915', '917', '925',
                       '927', '940', '947', '959', '964', '966', '980', '1007', '1026', '1035', '1050', '1059', '1067',
                       '1072', '1125', '1139', '1144', '1149', '1153', '1181', '1214', '1229'],
                   10: ['16', '25', '29', '106', '119', '138', '141', '151', '162', '163', '188', '193', '196', '208',
                        '234', '254', '311', '316', '327', '342', '365', '371', '375', '380', '397', '410', '422',
                        '425', '431', '481', '520', '523', '550', '559', '560', '570', '589', '622', '625', '634',
                        '656', '677', '691', '727', '759', '760', '780', '793', '797', '817', '823', '840', '842',
                        '845', '848', '849', '851', '882', '938', '1021', '1095', '1127', '1141', '1145', '1158',
                        '1162', '1185', '1211', '1224', '1230', '1235'],
                   11: ['26', '40', '52', '55', '57', '75', '93', '98', '123', '125', '146', '177', '181', '187', '190',
                        '216', '226', '273', '291', '298', '307', '344', '352', '359', '362', '364', '389', '461',
                        '468', '511', '516', '528', '544', '566', '582', '592', '615', '617', '671', '702', '718',
                        '733', '753', '805', '808', '810', '813', '816', '832', '867', '877', '880', '881', '907',
                        '913', '920', '923', '935', '968', '982', '985', '995', '1088', '1098', '1115', '1170', '1171',
                        '1172', '1199', '1216', '1219', '1234'],
                   12: ['11', '21', '24', '58', '59', '65', '74', '82', '173', '201', '211', '227', '249', '263', '281',
                        '401', '423', '438', '445', '465', '469', '486', '561', '606', '640', '678', '693', '711',
                        '716', '744', '747', '781', '798', '875', '876', '892', '895', '912', '919', '936', '961',
                        '963', '978', '983', '994', '997', '1012', '1019', '1040', '1046', '1049', '1062', '1069',
                        '1080', '1123', '1131', '1164', '1193', '1200', '1206', '1231'],
                   13: ['38', '50', '101', '110', '154', '157', '174', '213', '244', '247', '278', '279', '280', '332',
                        '339', '349', '402', '428', '441', '448', '488', '512', '525', '628', '635', '687', '751',
                        '762', '771', '774', '792', '833', '863', '873', '902', '914', '926', '929', '930', '942',
                        '956', '967', '979', '992', '993', '1036', '1038', '1045', '1058', '1075', '1076', '1077',
                        '1083', '1157', '1159', '1169', '1180', '1186', '1202', '1220'],
                   14: ['13', '18', '34', '99', '100', '107', '111', '135', '176', '199', '203', '219', '220', '232',
                        '233', '235', '236', '252', '261', '262', '313', '315', '319', '325', '340', '343', '345',
                        '357', '358', '368', '374', '378', '381', '439', '462', '477', '482', '487', '495', '517',
                        '524', '537', '539', '541', '545', '549', '572', '578', '598', '601', '613', '636', '650',
                        '651', '654', '661', '690', '703', '708', '721', '750', '767', '785', '799', '803', '819',
                        '824', '850', '891', '903', '910', '922', '932', '944', '986', '1009', '1018', '1025', '1028',
                        '1047', '1089', '1124', '1143', '1152', '1156', '1176', '1196', '1197'],
                   15: ['1', '2', '14', '64', '120', '134', '155', '170', '210', '228', '237', '243', '251', '259',
                        '289', '321', '330', '347', '350', '354', '356', '382', '415', '430', '446', '447', '454',
                        '457', '484', '490', '504', '507', '509', '521', '534', '588', '620', '629', '644', '657',
                        '667', '672', '683', '689', '694', '700', '701', '712', '749', '776', '778', '782', '794',
                        '800', '812', '826', '835', '846', '847', '853', '858', '868', '869', '872', '879', '888',
                        '921', '941', '952', '957', '999', '1011', '1030', '1039', '1041', '1051', '1052', '1061',
                        '1063', '1068', '1071', '1074', '1104', '1120', '1146', '1151', '1194', '1223', '1225', '1233',
                        '1236'],
                   16: ['44', '77', '80', '108', '109', '118', '166', '171', '185', '197', '206', '215', '221', '223',
                        '238', '240', '258', '276', '283', '288', '294', '295', '299', '322', '338', '348', '366',
                        '379', '411', '418', '424', '432', '435', '443', '455', '536', '538', '542', '595', '597',
                        '602', '611', '618', '624', '653', '662', '664', '682', '684', '723', '728', '734', '736',
                        '739', '754', '796', '828', '852', '874', '949', '955', '960', '962', '981', '988', '1001',
                        '1006', '1013', '1015', '1020', '1054', '1055', '1060', '1081', '1085', '1092', '1099', '1121',
                        '1140', '1182', '1192', '1195', '1222'],
                   17: ['4', '17', '30', '37', '48', '69', '114', '140', '142', '150', '159', '168', '184', '198',
                        '257', '277', '297', '304', '329', '333', '346', '367', '386', '500', '535', '557', '571',
                        '590', '638', '639', '648', '685', '713', '719', '777', '795', '809', '818', '839', '862',
                        '906', '908', '950', '969', '1003', '1004', '1029', '1070', '1078', '1082', '1101', '1105',
                        '1108', '1126', '1130', '1132', '1167', '1213'],
                   18: ['23', '27', '41', '47', '86', '102', '164', '175', '229', '245', '260', '300', '308', '337',
                        '405', '460', '471', '480', '489', '506', '519', '546', '567', '574', '646', '647', '688',
                        '784', '790', '815', '825', '829', '831', '836', '866', '878', '894', '904', '984', '991',
                        '1000', '1023', '1064', '1087', '1166', '1184', '1207', '1215', '1218'],
                   19: ['81', '116', '144', '209', '239', '293', '334', '437', '452', '499', '503', '547', '600', '658',
                        '827', '898', '939', '973', '974', '977', '1056', '1111', '1138', '1183', '1232'],
                   20: ['53', '67', '131', '136', '161', '270', '472', '614', '674', '857', '886', '924', '934', '945',
                        '953', '1024'],
                   21: ['94', '179', '267', '450', '548', '573', '633', '772', '987', '996', '1090', '1116', '1142',
                        '1188'], 22: ['8', '533', '705', '943', '1102'], 23: ['20', '115', '129', '264', '669', '720'],
                   24: ['275', '377', '663', '856', '1100'], 25: ['117', '710', '900', '1177'],
                   26: ['458', '562', '1044', '1097'], 27: ['286', '958'], 28: ['1034', '1065'], 29: ['317', '905'],
                   33: ['1043']}

root_dict = {
        '谁': [0, 3, 7, 15, 20, 28, 34, 36, 42, 61, 63, 66, 68, 72, 78, 79, 83, 84, 91, 92, 95, 96, 112, 121, 122, 126,
               128, 137, 139, 143, 145, 148, 151, 156, 169, 172, 174, 176, 177, 178, 181, 186, 189, 194, 195, 204, 207,
               213, 222, 224, 231, 242, 247, 248, 250, 253, 255, 265, 271, 282, 292, 296, 302, 303, 306, 320, 323, 324,
               328, 355, 361, 370, 373, 383, 384, 385, 387, 391, 392, 393, 394, 395, 396, 398, 402, 403, 404, 406, 419,
               420, 426, 429, 436, 450, 451, 456, 457, 461, 463, 465, 466, 470, 473, 476, 483, 485, 491, 496, 497, 502,
               510, 513, 514, 515, 518, 526, 527, 530, 533, 543, 551, 556, 558, 560, 563, 565, 568, 575, 577, 581, 582,
               583, 584, 586, 587, 588, 589, 591, 592, 593, 599, 603, 605, 607, 608, 609, 610, 612, 619, 625, 631, 632,
               637, 641, 643, 649, 656, 666, 673, 675, 679, 686, 696, 706, 707, 715, 725, 726, 729, 730, 732, 735, 741,
               752, 757, 763, 765, 766, 768, 769, 775, 789, 811, 814, 821, 822, 834, 838, 841, 844, 859, 864, 868, 884,
               885, 887, 893, 896, 897, 899, 901, 916, 928, 937, 943, 946, 948, 951, 954, 965, 970, 971, 972, 976, 989,
               990, 998, 999, 1002, 1008, 1027, 1031, 1033, 1041, 1042, 1057, 1073, 1079, 1086, 1091, 1093, 1096, 1112,
               1116, 1118, 1119, 1129, 1134, 1136, 1147, 1150, 1154, 1161, 1163, 1165, 1173, 1186, 1189, 1198, 1204,
               1209, 1211, 1212, 1217, 1228],
        '有': [1, 2, 4, 6, 9, 10, 14, 17, 21, 27, 30, 31, 33, 37, 38, 39, 43, 44, 46, 49, 54, 55, 56, 58, 59, 60, 64,
               65, 71, 73, 74, 75, 77, 80, 81, 85, 86, 93, 97, 98, 101, 111, 114, 116, 117, 118, 125, 129, 130, 134,
               135, 144, 149, 150, 153, 160, 162, 163, 164, 170, 171, 175, 184, 185, 191, 192, 193, 196, 197, 198, 200,
               201, 202, 205, 206, 208, 209, 210, 212, 215, 219, 225, 229, 233, 236, 238, 239, 241, 243, 244, 245, 252,
               256, 257, 258, 262, 267, 269, 273, 274, 276, 277, 280, 281, 285, 287, 288, 291, 297, 300, 301, 304, 305,
               308, 314, 317, 318, 321, 322, 326, 331, 335, 336, 337, 339, 345, 347, 348, 353, 354, 358, 364, 371, 377,
               379, 381, 388, 397, 399, 411, 412, 416, 417, 421, 423, 424, 428, 433, 434, 435, 438, 439, 440, 442, 443,
               449, 452, 455, 460, 462, 467, 472, 475, 478, 479, 480, 482, 488, 490, 495, 499, 500, 505, 507, 511, 512,
               519, 522, 525, 529, 532, 535, 536, 537, 541, 545, 547, 548, 549, 550, 555, 557, 559, 561, 564, 566, 567,
               569, 570, 571, 572, 573, 574, 576, 578, 579, 594, 595, 596, 597, 600, 601, 606, 614, 615, 620, 622, 623,
               624, 627, 628, 629, 633, 635, 646, 647, 648, 651, 652, 653, 654, 659, 661, 667, 670, 671, 678, 682, 684,
               687, 689, 690, 694, 698, 700, 703, 704, 711, 713, 717, 720, 723, 734, 737, 738, 739, 742, 745, 746, 751,
               753, 754, 756, 759, 762, 764, 767, 770, 772, 774, 776, 781, 782, 795, 798, 799, 800, 801, 802, 818, 823,
               825, 826, 827, 829, 831, 833, 835, 836, 843, 846, 849, 850, 852, 854, 856, 862, 872, 873, 874, 875, 876,
               878, 879, 888, 892, 894, 898, 900, 902, 904, 906, 907, 908, 909, 914, 915, 918, 926, 929, 931, 932, 933,
               934, 938, 945, 949, 953, 955, 958, 962, 969, 974, 975, 977, 982, 983, 984, 986, 991, 992, 993, 994, 997,
               1001, 1005, 1006, 1009, 1018, 1019, 1020, 1024, 1026, 1028, 1029, 1030, 1036, 1037, 1044, 1047, 1049,
               1051, 1053, 1055, 1058, 1061, 1062, 1063, 1064, 1067, 1069, 1070, 1072, 1080, 1082, 1085, 1088, 1089,
               1090, 1097, 1101, 1103, 1104, 1105, 1108, 1109, 1111, 1115, 1117, 1127, 1131, 1132, 1135, 1137, 1140,
               1141, 1142, 1144, 1145, 1149, 1151, 1168, 1172, 1175, 1178, 1180, 1183, 1184, 1185, 1192, 1193, 1203,
               1205, 1207, 1208, 1210, 1219, 1221, 1225, 1226, 1227, 1229], '制作': [5, 712],
        '？': [8, 123, 141, 226, 251, 259, 266, 275, 299, 316, 330, 350, 365, 375, 407, 415, 447, 448, 469, 516, 636,
              640, 665, 672, 683, 702, 718, 731, 788, 809, 816, 824, 832, 848, 851, 886, 920, 923, 939, 961, 973, 978,
              985, 987, 1000, 1012, 1056, 1087, 1123, 1202, 1215, 1216, 1224],
        '出演': [11, 312, 501, 552, 598, 692, 716, 842, 880, 891, 903, 1045],
        '毕业于': [12, 62, 103, 199, 234, 357, 366, 481, 858, 942, 956, 1054, 1155, 1160, 1194, 1196], '对': [13],
        '担任': [16, 18, 268, 477, 727, 881],
        '参演': [19, 24, 29, 51, 57, 152, 165, 216, 220, 230, 246, 290, 298, 307, 319, 351, 359, 363, 390, 408, 409,
                 418, 422, 427, 464, 492, 494, 523, 531, 538, 540, 542, 621, 634, 645, 680, 697, 714, 760, 803, 817,
                 837, 855, 917, 940, 959, 964, 980, 1022, 1035, 1038, 1059, 1083, 1095, 1106, 1139, 1181, 1199],
        '写': [22, 70, 94, 110, 187, 217, 264, 332, 458, 474, 498, 553, 669, 676, 740, 758, 783, 806, 871, 889, 1032,
               1050, 1065, 1100, 1110, 1146, 1148, 1190], '爱上': [23], '扮演': [25, 368, 925, 1076, 1156],
        '已知': [26], '毕业生': [32, 180, 343, 580, 699, 722, 787, 1010, 1017, 1107, 1128],
        '关系': [35, 369, 830, 1164],
        '出版': [40, 45, 50, 227, 295, 349, 405, 445, 520, 528, 562, 602, 611, 691, 733, 771, 784, 785, 808, 866, 867,
                 882, 944, 967, 1043, 1052, 1074, 1081, 1124, 1170, 1176, 1179, 1188],
        '请问': [41, 108, 179, 334, 705, 710, 957, 1098],
        '作品': [47, 161, 401, 471, 484, 685, 721, 786, 895, 1007, 1102, 1152, 1169],
        '是': [48, 183, 249, 309, 341, 342, 362, 414, 454, 865, 922, 1153, 1177],
        '最多': [52, 53, 154, 235, 315, 644, 657, 728, 857, 910, 979, 1126, 1158, 1197], '?': [67],
        '包含': [69, 100, 155, 270, 346, 374, 663, 794, 869, 941, 1021], '演唱': [76, 963],
        '参与': [82, 313, 327, 344, 410, 503, 773, 780, 927, 968, 1046, 1214], '曾孙子': [87],
        '唱': [88, 293, 380, 658],
        '什么': [89, 105, 113, 124, 133, 147, 158, 240, 261, 284, 356, 360, 441, 468, 604, 681, 709, 724, 743, 755, 790,
                 791, 812, 919, 947, 1016, 1066, 1075, 1122, 1174, 1187],
        '有没有': [90, 104, 109, 136, 214, 254, 260, 272, 367, 487, 489, 504, 617, 618, 668, 688, 708, 777, 820, 853,
                   863, 883, 950, 952, 966, 981, 995, 996, 1004, 1023, 1025, 1034, 1068],
        '演员': [99, 650, 905, 1143, 1195], '学院': [102], '更多': [106, 188, 311, 431, 521, 921, 1015, 1130],
        '自己': [107, 237, 338, 534, 749, 1011, 1223], '成': [115], '机构': [119, 218, 585, 840, 1084],
        '人': [120, 1220], '虚谷': [127], '出': [131], '配音': [132], '发行': [138, 508, 544, 695, 860, 1014],
        '含有': [140], '包括': [142, 228, 796], '还有': [146, 211, 660, 750], '学校': [157],
        '创作': [159, 232, 310, 400, 413, 425, 493, 616, 626, 642, 748, 1094, 1113], '热恋': [166, 1092],
        '哪': [167, 173, 554, 630, 807, 936, 1133, 1171, 1191], '染坊': [168],
        '大学': [182, 294, 333, 382, 430, 446, 638, 701, 1120, 1138], '在': [190, 278], '最少': [203, 432],
        '去': [221, 509], '人物': [223, 352, 486, 662, 736, 861, 911, 1121, 1125], '向夏': [263], '水商': [279],
        '领导': [283, 329, 590, 988, 1060, 1071, 1078], '多': [286], '长': [289], '刘芳': [325], '忘': [340],
        '执导': [372], '合作': [376, 792, 793, 912, 1162], '接近': [378], '读': [386], '哪些': [389], '说': [437],
        '父亲': [444], '搭档': [453, 655, 747], '连载': [459], '毕业': [506, 546, 815, 819, 1166], '名字': [517],
        '电视剧': [524], '王忻辰': [539], '本人': [613], '跑': [639], '录': [664], '张学友': [674], '相同': [677, 1077],
        '好友': [693, 1167], '是否': [719], '之一': [744, 845], '儿子': [761], '吴莫愁': [778], '曾祖父': [779, 890],
        '作者': [797], '教': [804], '哥哥': [805], '弟弟': [810, 813], '歌手': [828], '吴泓君': [839], '重合': [847],
        '专辑': [870], '共有': [877], '属于': [913, 1157], '剧': [924], '王自健': [930], '电影': [935], '没有': [960],
        '后厨': [1003], '潘越云': [1013], '饰演': [1039], '偏向': [1040], '女儿': [1048], '科学院': [1099],
        '王建': [1114], '张璇': [1159], '赵京南': [1182], '导演': [1200], '姑父': [1201], '任职': [1206],
        '列出': [1213], '传': [1218], '出版社': [1222]}
relation = [['堂姐', '侄孙媳妇', '弟媳', '导师', '堂小舅子', '大爷爷', '师爷', '继母', '未婚夫', '前夫', '姑妈', '恋人',
             '第三任妻子', '师妹', '第一任妻子', '养父', '对手', '养母', '女儿', '原配', '挚爱', '义妹', '曾孙子',
             '侄孙子', '养女', '公公', '姨父', '堂侄', '丈夫', '第二任妻子', '岳父', '外祖父', '伯父', '学弟', '师父',
             '伴侣', '表哥', '学长', '妹夫', '姐姐', '师祖', '嫡母', '岳母', '男友', '曾外孙子', '舅母', '前女友',
             '堂兄', '老师', '爱人', '小叔子', '儿子', '女朋友', '奶奶', '恩师', '外孙', '侄子', '弟子', '师弟', '母亲',
             '堂哥', '前儿媳', '舅父', '妻子', '外孙女', '第二任丈夫', '生父', '旧爱', '朋友', '妻姐', '养子', '兄弟',
             '曾外祖父', '前男友', '外曾孙子', '堂弟', '继父', '大伯哥', '徒弟', '知己', '儿媳', '堂伯父', '女婿',
             '亲家公', '曾祖父', '叔父', '姑母', '继子', '师傅', '外甥', '姑父', '学妹', '小姑子', '第四任妻子', '偶像',
             '前任', '表姨', '亲家母', '战友', '生母', '外曾祖母', '祖父', '小舅子', '庶子', '表妹', '嫂子', '好友',
             '前公公', '义女', '师兄', '曾孙', '同学', '外曾祖父', '男朋友', '叔叔', '大姨子', '义子', '曾祖母',
             '未婚妻', '姨夫', '表姑父', '义兄', '表侄', '连襟', '姐夫', '学生', '弟弟', '同门', '师生', '先夫',
             '叔外公', '曾孙女', '教练', '侄孙', '妹妹', '前队友', '表兄', '孙子', '亡妻', '第六任妻子', '搭档', '伯母',
             '祖母', '表叔', '伯乐', '婶母', '婆婆', '外曾孙女', '表弟', '外甥女婿', '第五任妻子', '继女', '叔外祖父',
             '妾', '妯娌', '义弟', '哥哥', '大舅子', '义父', '伯伯', '父亲', '外祖母', '第一任丈夫', '外孙子', '玄孙',
             '姑姑', '师姐', '大舅哥', '队友', '外甥女', '小姨子', '堂妹', '曾外祖母', '学姐', '义母', '堂舅', '大姑子',
             '孙女', '表姐', '姨母', '前妻', '侄女'],
            ['连载平台', '合作人', '文学作品', '摄影作品', '作者', '办学性质', '其他关系', '主要配音', '发行专辑',
             '设立单位', '主要演员', '成员', '历任领导', '办学团体', '综艺节目', '创始人', '员工', '执导', '主要角色',
             '代表作品', '学校特色', '创办', '旗下艺人', '音乐视频', '助理', '院系设置', '歌曲原唱', '云孙', '社长',
             '学校身份', '主要作品', '类别', '毕业院校', '知名人物', '所属机构', '制作', '登场作品', '配音',
             '相关国内联盟', '音乐作品', '简称', '经纪人', '为他人创作音乐', '出版社', '老板', '经纪公司', '代表',
             '领导', '继任', '参演', '现任领导', '编剧', '类型', '合作院校', '专职院士数', '主持', '法人', '学校类别']]


def main1(questions):

    last_result = {}
    myhanlp = my_hanlp()
    doc = myhanlp.dependency(questions)
    t = Tree()
    doctok = doc["tok/fine"]
    dokdep = doc["dep"]
    searcher = AnswerSearcher()
    for index, value in enumerate(dokdep):
        token = t.quick(doctok[index], value)
        if len(token) >= 2:
            if token[1] != '"' and token[1] in relation[0] or token[1] in relation[1]:
                print(index, end= '')
                print(questions[index])
                #print(token)
                result = searcher.er_(None, token[0], token[1], None)
                #print(qa_data[str(index)]["answer"], end=' ')
                if len(result) == 0:
                    result = ['无']
            else:
                result = ['无']
        else:
            result = ['无']
        print(result)
        last_result[str(index)] = ['无']
    with open('data1.json', 'w', encoding='utf-8') as f:
        json.dump(last_result, f, ensure_ascii=False, indent=4)


def test_all():
    with open('../data/test_qa.json', 'r', encoding='utf-8') as f:
        qa_data = json.loads(f.read())
        questions = []
        for key,_ in qa_data.items():
            q = qa_data[str(key)]['question']
            questions.append(q)
        main1(questions)

def test_dep_root():
    with open('../data/train_qa.json', 'r', encoding='utf-8') as f:
        qa_data = json.loads(f.read())
        questions = []
        for key in root_dict['谁']:
            q = qa_data[str(key)]['question']
            questions.append(q)
        main1(questions)

def test_len():
    with open('../data/train_qa.json', 'r', encoding='utf-8') as f:
        qa_data = json.loads(f.read())
        questions = []
        for key in length_dict[8]:
            q = qa_data[str(key)]['question']
            questions.append(q)
        main1(questions)

test_len()



